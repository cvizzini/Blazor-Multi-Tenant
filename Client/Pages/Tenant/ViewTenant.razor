@page "/viewtenant/{objID:int}"
@using ExampleApp.Shared.Models
@using ExampleApp.Shared
@inject ITenantService TenantService
@inject IUserTenantAccessService UserTenantAccessService
@inject NavigationManager urlNavigationManager

<h2>View Tenant</h2>
<hr />


<div class="form-group row">
    <h3 class="control-label col-md-12">Name</h3>
    <div class="col-md-4">
        <p> @obj.Name </p>
    </div>
</div>

<div class="form-group row">
    <h3 class="control-label col-md-12">Host</h3>
    <div class="col-md-4">
        <p> @obj.Host </p>
    </div>
</div>

<div class="form-group row">
    <h3 class="control-label col-md-12">Description</h3>
    <div class="col-md-12">
        <p> @obj.DatabaseConnection </p>
    </div>
</div>

<div class="form-group row">
    <h3 class="control-label col-md-12">Users Tenant Access</h3>
    <div class="col-md-12">
        @if (userTenantAccessList == null)
        {
        <p><em>Loading...</em></p> }
        else
        {
        <table class='table'>
            <thead>
                <tr>
                    <th>UserTenantAccessId</th>
                    <th>Username</th>
                    <th>Email</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var uta in userTenantAccessList)
                {
                <tr>
                    <td>@uta.UserTenantAccessId</td>
                    <td>@uta.Username</td>
                    <td>@uta.Email</td>                   
                </tr>
                }
            </tbody>
        </table>
        }
    </div>
</div>

@code { 
    [Parameter]
    public int objID { get; set; }

    List<UserAccessDTO> userTenantAccessList;

    Tenant obj = new Tenant();

    protected override async Task OnInitializedAsync()
    {
        obj = await TenantService.GetTenantData(objID);
        userTenantAccessList = await UserTenantAccessService.GetUsersByTenantId(objID);
    }

   }
